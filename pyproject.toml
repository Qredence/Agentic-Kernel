[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentic-kernel"
version = "0.1.0"
description = "A multi-agent workflow system for complex task execution"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["agents", "workflow", "automation"]
authors = [
    { name = "AgenticFleet Labs", email = "info@agenticfleet.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pydantic>=2.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pylint>=2.17.0",
    "pytest-cov>=4.0.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
]

[tool.pylint.format]
max-line-length = 88
