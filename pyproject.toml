[project]
name = "agentic-kernel"
version = "0.1.0"
description = "Agentic Kernel - Enhanced Semantic Kernel Framework with Custom Plugins"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "AgenticFleet Team" }
]
dependencies = [
    "semantic-kernel[openai]>=1.2.1", # Core SK with OpenAI support only
    "chainlit==2.4.400",

    
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0", # Core Pydantic only
    "requests>=2.31.0", # For web requests
    "beautifulsoup4>=4.12.0", # For web scraping
    "python-magic>=0.4.27", # For file type detection
    "playwright>=1.51.0",
    "mcp",   
    "azure-search-documents>=11.6.0b9",
    "azure-cosmos>=4.7.0",
    "azure-core>=1.32.0",
    "azure-identity>=1.21.0",
    "azure-storage-blob>=12.12.0",
    "azure-storage-queue>=12.12.0",
    "azure-data-tables>=12.4.0",
    "azure-storage-file-share>=12.12.0",
    "azure-ai-projects>=1.0.0b4",
    "azure-core-tracing-opentelemetry>=1.0.0b12",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.0",
    "pytest-mock>=3.14.0",  # For mocking in tests
    "responses>=0.24.1",  # For mocking HTTP requests in tests
]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.15.0",
    "ruff>=0.11.2"
]
azure = [
    "azure-ai-inference>=1.0.0b9",
    "azure-search-documents>=11.6.0b9",
    "azure-cosmos>=4.7.0"
]

sql = [
    "pyodbc>=5.2.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/agenticfleet"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
line-length = 88
target-version = "py312"
